{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","useState","currentIndex","setCurrentIndex","NEXT","PREV","handleOnClickButton","direction","prevIndex","Math","min","length","max","Error","className","cn","disabled","type","onClick","style","width","transform","transitionDuration","map","el","index","src","alt","App","state","event","action","this","setState","prevState","target","value","htmlFor","id","onChange","handleOnChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf931f81.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const NEXT = 'NEXT';\n  const PREV = 'PREV';\n\n  const handleOnClickButton = (direction: string) => {\n    switch (direction) {\n      case NEXT:\n        setCurrentIndex(\n          prevIndex => Math.min(prevIndex + step, images.length - frameSize),\n        );\n        break;\n\n      case PREV:\n        setCurrentIndex(prevIndex => Math.max(prevIndex - step, 0));\n        break;\n\n      default:\n        throw new Error('Incorrect action');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"Carousel\">\n        <button\n          className={cn('Carousel__button', 'Carousel__button--prev', {\n            disabled: currentIndex === 0,\n          })}\n          type=\"button\"\n          onClick={() => handleOnClickButton(PREV)}\n        >\n          Prev\n        </button>\n\n        <div className=\"wrapper\" style={{ width: `${itemWidth * frameSize}px` }}>\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(-${currentIndex * itemWidth}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((el, index) => (\n              <li key={el}>\n                <img\n                  className=\"Carousel__image\"\n                  src={el}\n                  alt={`${index + 1}`}\n                  style={{ width: `${itemWidth}px` }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          className={cn('Carousel__button', 'Carousel__button--next', {\n            disabled: currentIndex >= images.length - frameSize,\n          })}\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => handleOnClickButton(NEXT)}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ntype State = {\n  'images': string[];\n  'itemWidth': number,\n  'frameSize': number,\n  'step': number,\n  'animationDuration': number,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  handleOnChange(\n    event: React.ChangeEvent<HTMLInputElement>,\n    action: keyof State,\n  ) {\n    this.setState((prevState) => ({\n      ...prevState,\n      [action]: +event.target.value,\n    }));\n  }\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n        />\n\n        <form action=\"\">\n          <label htmlFor=\"itemId\">\n            Item Width:\n            <input\n              type=\"text\"\n              id=\"itemId\"\n              value={this.state.itemWidth}\n              onChange={(event) => this.handleOnChange(event, 'itemWidth')}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Frame Size:\n            <input\n              type=\"text\"\n              id=\"frameId\"\n              value={this.state.frameSize}\n              onChange={(event) => this.handleOnChange(event, 'frameSize')}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              type=\"text\"\n              id=\"stepId\"\n              value={this.state.step}\n              onChange={(event) => this.handleOnChange(event, 'step')}\n            />\n          </label>\n\n          <label htmlFor=\"animationId\">\n            Animation Duration:\n            <input\n              type=\"text\"\n              id=\"animationId\"\n              value={this.state.animationDuration}\n              onChange={(event) => {\n                this.handleOnChange(event, 'animationDuration');\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}